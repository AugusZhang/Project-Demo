//
//  AppDelegate+Guaid.m
//  AgriculturalProduct
//
//  Created by 古鹏 on 2017/10/27.
//  Copyright © 2017年 cjwsc. All rights reserved.
//

#import "AppDelegate+Guaid.h"
#import "CJWGuaidViewController.h"
//#import "YCLoginViewController.h"
#import "SVProgressHUD.h"
#import "SVProgressHUD_Extension.h"

#import <objc/runtime.h>

const char* kGuaidWindowKey = "kGuaidWindowKey";
NSString * const kLastVersionKey = @"kLastVersionKey";

@implementation AppDelegate (Guaid)

+ (void)load{
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        
        NSString* lastVersion = [[NSUserDefaults standardUserDefaults] stringForKey:kLastVersionKey];
        NSString* curtVersion = [NSBundle mainBundle].infoDictionary[@"CFBundleShortVersionString"];

        if ([curtVersion compare:lastVersion] == NSOrderedDescending) {
            Method originMethod = class_getInstanceMethod(self.class, @selector(application:didFinishLaunchingWithOptions:));
            Method customMethod = class_getInstanceMethod(self.class, @selector(guaid_application:didFinishLaunchingWithOptions:));
            
            method_exchangeImplementations(originMethod, customMethod);
            
        }
    });
}

- (BOOL)guaid_application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
    
    self.guaidWindow = [[UIWindow alloc] init];
    self.guaidWindow.frame = self.guaidWindow.screen.bounds;
    self.guaidWindow.backgroundColor = [UIColor clearColor];
    self.guaidWindow.windowLevel = UIWindowLevelStatusBar - 1;
    
    CJWGuaidViewController* vc = [[CJWGuaidViewController alloc] init];
    vc.shouldHidden = ^{

        NSString* curtVersion = [NSBundle mainBundle].infoDictionary[@"CFBundleShortVersionString"];
        [[NSUserDefaults standardUserDefaults] setObject:curtVersion forKey:kLastVersionKey];
        [[NSUserDefaults standardUserDefaults] synchronize];

        [UIView animateWithDuration:0.3 animations:^{
            self.guaidWindow.alpha = 0.0;
        } completion:^(BOOL finished) {
            self.guaidWindow.hidden = YES;
            [self.guaidWindow resignKeyWindow];
            self.guaidWindow = nil;
        }];

    };
    
    [SVProgressHUD sharedView].maxSupportedWindowLevel = self.guaidWindow.windowLevel;
    
//    YCLoginViewController *loginVC = [[YCLoginViewController alloc] initWithNibName:@"YCLoginViewController" bundle:nil];
//    UINavigationController *loginNV = [[UINavigationController alloc] initWithRootViewController:loginVC];
//
//    __weak typeof(self) weakSelf = self;
//
//    loginVC.loginSuccess = ^{
//        NSString* curtVersion = [NSBundle mainBundle].infoDictionary[@"CFBundleShortVersionString"];
//        [[NSUserDefaults standardUserDefaults] setObject:curtVersion forKey:kLastVersionKey];
//        [[NSUserDefaults standardUserDefaults] synchronize];
//
//        [UIView animateWithDuration:0.3 animations:^{
//            weakSelf.guaidWindow.alpha = 0.0;
//        } completion:^(BOOL finished) {
//            weakSelf.guaidWindow.hidden = YES;
//            [weakSelf.guaidWindow resignKeyWindow];
//            weakSelf.guaidWindow = nil;
//        }];
//    };
    
    self.guaidWindow.rootViewController = vc;
    [self.guaidWindow makeKeyAndVisible];
    
    return [self guaid_application:application didFinishLaunchingWithOptions:launchOptions];
}

- (UIWindow *)guaidWindow{
    return  objc_getAssociatedObject(self, kGuaidWindowKey);
}
- (void)setGuaidWindow:(UIWindow *)guaidWindow{
    objc_setAssociatedObject(self, kGuaidWindowKey, guaidWindow, OBJC_ASSOCIATION_RETAIN);
}

@end
